<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{e6953f83-d839-416e-ae8c-101862808c15}</ProjectGuid>
    <Keyword>MakefileProj</Keyword>
    <ConfigurationType>Makefile</ConfigurationType>
    <CharacterSet>Unicode</CharacterSet>
    <WriteOutputToRoot>true</WriteOutputToRoot>
    <PlatformToolset>v110</PlatformToolset>
    <RootNamespace>configuration</RootNamespace>
  </PropertyGroup>
  <Import Project="..\build\JoeWin.settings.targets" />
  <ItemGroup>
    <DocFile Include="$(JoeDocsDir)\license.txt" />
    <ConfigFile Include="$(JoeConfDir)\ftyperc" />
    <ConfigFile Include="$(JoeConfDir)\jmacsrc" />
    <ConfigFile Include="$(JoeConfDir)\joerc" />
    <ConfigFile Include="$(JoeConfDir)\jpicorc" />
    <ConfigFile Include="$(JoeConfDir)\jstarrc" />
    <SyntaxFile Include="$(JoeSyntaxDir)\4gl.jsf" />
    <SyntaxFile Include="$(JoeSyntaxDir)\ada.jsf" />
    <SyntaxFile Include="$(JoeSyntaxDir)\asm.jsf" />
    <SyntaxFile Include="$(JoeSyntaxDir)\awk.jsf" />
    <SyntaxFile Include="$(JoeSyntaxDir)\batch.jsf" />
    <SyntaxFile Include="$(JoeSyntaxDir)\c.jsf" />
    <SyntaxFile Include="$(JoeSyntaxDir)\cobol.jsf" />
    <SyntaxFile Include="$(JoeSyntaxDir)\conf.jsf" />
    <SyntaxFile Include="$(JoeSyntaxDir)\csh.jsf" />
    <SyntaxFile Include="$(JoeSyntaxDir)\csharp.jsf" />
    <SyntaxFile Include="$(JoeSyntaxDir)\css.jsf" />
    <SyntaxFile Include="$(JoeSyntaxDir)\diff.jsf" />
    <SyntaxFile Include="$(JoeSyntaxDir)\fortran.jsf" />
    <SyntaxFile Include="$(JoeSyntaxDir)\haskell.jsf" />
    <SyntaxFile Include="$(JoeSyntaxDir)\html.jsf" />
    <SyntaxFile Include="$(JoeSyntaxDir)\ini.jsf" />
    <SyntaxFile Include="$(JoeSyntaxDir)\java.jsf" />
    <SyntaxFile Include="$(JoeSyntaxDir)\javascript.jsf" />
    <SyntaxFile Include="$(JoeSyntaxDir)\joerc.jsf" />
    <SyntaxFile Include="$(JoeSyntaxDir)\jsf.jsf" />
    <SyntaxFile Include="$(JoeSyntaxDir)\jsf_check.jsf" />
    <SyntaxFile Include="$(JoeSyntaxDir)\lisp.jsf" />
    <SyntaxFile Include="$(JoeSyntaxDir)\lua.jsf" />
    <SyntaxFile Include="$(JoeSyntaxDir)\m4.jsf" />
    <SyntaxFile Include="$(JoeSyntaxDir)\mail.jsf" />
    <SyntaxFile Include="$(JoeSyntaxDir)\mason.jsf" />
    <SyntaxFile Include="$(JoeSyntaxDir)\matlab.jsf" />
    <SyntaxFile Include="$(JoeSyntaxDir)\ocaml.jsf" />
    <SyntaxFile Include="$(JoeSyntaxDir)\pascal.jsf" />
    <SyntaxFile Include="$(JoeSyntaxDir)\perl.jsf" />
    <SyntaxFile Include="$(JoeSyntaxDir)\php.jsf" />
    <SyntaxFile Include="$(JoeSyntaxDir)\ps.jsf" />
    <SyntaxFile Include="$(JoeSyntaxDir)\python.jsf" />
    <SyntaxFile Include="$(JoeSyntaxDir)\rexx.jsf" />
    <SyntaxFile Include="$(JoeSyntaxDir)\ruby.jsf" />
    <SyntaxFile Include="$(JoeSyntaxDir)\sed.jsf" />
    <SyntaxFile Include="$(JoeSyntaxDir)\sh.jsf" />
    <SyntaxFile Include="$(JoeSyntaxDir)\skill.jsf" />
    <SyntaxFile Include="$(JoeSyntaxDir)\sml.jsf" />
    <SyntaxFile Include="$(JoeSyntaxDir)\spec.jsf" />
    <SyntaxFile Include="$(JoeSyntaxDir)\sql.jsf" />
    <SyntaxFile Include="$(JoeSyntaxDir)\tcl.jsf" />
    <SyntaxFile Include="$(JoeSyntaxDir)\tex.jsf" />
    <SyntaxFile Include="$(JoeSyntaxDir)\troff.jsf" />
    <SyntaxFile Include="$(JoeSyntaxDir)\typescript.jsf" />
    <SyntaxFile Include="$(JoeSyntaxDir)\verilog.jsf" />
    <SyntaxFile Include="$(JoeSyntaxDir)\vhdl.jsf" />
    <SyntaxFile Include="$(JoeSyntaxDir)\xml.jsf" />
    <ColorFile Include="$(SchemesDir)\putty-black.joecolor" />
    <ColorFile Include="$(SchemesDir)\putty-white.joecolor" />
    <ColorFile Include="$(SchemesDir)\solarized.joecolor" />
    <ColorFile Include="$(SchemesDir)\solarized-light.joecolor" />
    <ColorFile Include="$(SchemesDir)\xterm.joecolor" />
    <ColorGenFile Include="$(VimSchemeDir)\autumn.vim" />
    <ColorGenFile Include="$(VimSchemeDir)\candycode.vim" />
    <ColorGenFile Include="$(VimSchemeDir)\darkblue2.vim" />
    <ColorGenFile Include="$(VimSchemeDir)\darkspectrum.vim" />
    <ColorGenFile Include="$(VimSchemeDir)\dawn.vim" />
    <ColorGenFile Include="$(VimSchemeDir)\desert.vim" />
    <ColorGenFile Include="$(VimSchemeDir)\dusk.vim" />
    <ColorGenFile Include="$(VimSchemeDir)\eclipse.vim" />
    <ColorGenFile Include="$(VimSchemeDir)\freya.vim" />
    <ColorGenFile Include="$(VimSchemeDir)\inkpot.vim" />
    <ColorGenFile Include="$(VimSchemeDir)\ir_black.vim" />
    <!--ColorGenFile Include="$(VimSchemeDir)\jellybeans.vim" /-->
    <ColorGenFile Include="$(VimSchemeDir)\lucius.vim" />
    <ColorGenFile Include="$(VimSchemeDir)\mayansmoke.vim" />
    <ColorGenFile Include="$(VimSchemeDir)\molokai.vim" />
    <ColorGenFile Include="$(VimSchemeDir)\moria-dark.vim" />
    <ColorGenFile Include="$(VimSchemeDir)\moria-light.vim" />
    <ColorGenFile Include="$(VimSchemeDir)\mustang.vim" />
    <ColorGenFile Include="$(VimSchemeDir)\oceandeep.vim" />
    <ColorGenFile Include="$(VimSchemeDir)\peaksea-dark.vim" />
    <ColorGenFile Include="$(VimSchemeDir)\peaksea-light.vim" />
    <ColorGenFile Include="$(VimSchemeDir)\pyte.vim" />
    <ColorGenFile Include="$(VimSchemeDir)\railscasts.vim" />
    <ColorGenFile Include="$(VimSchemeDir)\rdark.vim" />
    <ColorGenFile Include="$(VimSchemeDir)\rootwater.vim" />
    <ColorGenFile Include="$(VimSchemeDir)\sienna-dark.vim" />
    <ColorGenFile Include="$(VimSchemeDir)\sienna-light.vim" />
    <ColorGenFile Include="$(VimSchemeDir)\slate.vim" />
    <ColorGenFile Include="$(VimSchemeDir)\synic.vim" />
    <ColorGenFile Include="$(VimSchemeDir)\tango.vim" />
    <ColorGenFile Include="$(VimSchemeDir)\tango2.vim" />
    <!--ColorGenFile Include="$(VimSchemeDir)\twilight.vim" /-->
    <!--ColorGenFile Include="$(VimSchemeDir)\vividchalk.vim" /-->
    <ColorGenFile Include="$(VimSchemeDir)\wombat.vim" />
    <ColorGenFile Include="$(VimSchemeDir)\xoria256.vim" />
    <ColorGenFile Include="$(VimSchemeDir)\zenburn-hc.vim" />
    <ColorGenFile Include="$(VimSchemeDir)\zenburn.vim" />
    <ColorGenerator Include="$(SchemeGenDir)\convertvimcolor.py" />
    <ColorGenerator Include="$(SchemeGenDir)\vimreader.py" />
    <ColorOverrideFile Include="$(VimSchemeDir)\autumn.override" />
    <ColorOverrideFile Include="$(VimSchemeDir)\candycode.override" />
    <ColorOverrideFile Include="$(VimSchemeDir)\darkblue2.override" />
    <ColorOverrideFile Include="$(VimSchemeDir)\darkspectrum.override" />
    <ColorOverrideFile Include="$(VimSchemeDir)\dawn.override" />
    <ColorOverrideFile Include="$(VimSchemeDir)\desert.override" />
    <ColorOverrideFile Include="$(VimSchemeDir)\dusk.override" />
    <ColorOverrideFile Include="$(VimSchemeDir)\eclipse.override" />
    <ColorOverrideFile Include="$(VimSchemeDir)\freya.override" />
    <ColorOverrideFile Include="$(VimSchemeDir)\inkpot.override" />
    <ColorOverrideFile Include="$(VimSchemeDir)\ir_black.override" />
    <ColorOverrideFile Include="$(VimSchemeDir)\lucius.override" />
    <ColorOverrideFile Include="$(VimSchemeDir)\mayansmoke.override" />
    <ColorOverrideFile Include="$(VimSchemeDir)\molokai.override" />
    <ColorOverrideFile Include="$(VimSchemeDir)\moria-dark.override" />
    <ColorOverrideFile Include="$(VimSchemeDir)\moria-light.override" />
    <ColorOverrideFile Include="$(VimSchemeDir)\mustang.override" />
    <ColorOverrideFile Include="$(VimSchemeDir)\oceandeep.override" />
    <ColorOverrideFile Include="$(VimSchemeDir)\peaksea-dark.override" />
    <ColorOverrideFile Include="$(VimSchemeDir)\peaksea-light.override" />
    <ColorOverrideFile Include="$(VimSchemeDir)\pyte.override" />
    <ColorOverrideFile Include="$(VimSchemeDir)\railscasts.override" />
    <ColorOverrideFile Include="$(VimSchemeDir)\rdark.override" />
    <ColorOverrideFile Include="$(VimSchemeDir)\rootwater.override" />
    <ColorOverrideFile Include="$(VimSchemeDir)\sienna-dark.override" />
    <ColorOverrideFile Include="$(VimSchemeDir)\sienna-light.override" />
    <ColorOverrideFile Include="$(VimSchemeDir)\slate.override" />
    <ColorOverrideFile Include="$(VimSchemeDir)\synic.override" />
    <ColorOverrideFile Include="$(VimSchemeDir)\tango.override" />
    <ColorOverrideFile Include="$(VimSchemeDir)\tango2.override" />
    <ColorOverrideFile Include="$(VimSchemeDir)\wombat.override" />
    <ColorOverrideFile Include="$(VimSchemeDir)\xoria256.override" />
    <ColorOverrideFile Include="$(VimSchemeDir)\zenburn-hc.override" />
    <ColorOverrideFile Include="$(VimSchemeDir)\zenburn.override" />
  </ItemGroup>
  <Import Project="..\build\JoeWin.targets" />
  <!-- Targets -->
  <Target Name="Build" DependsOnTargets="CopyConfigFiles; CopySyntaxFiles; CopyColorGenFiles; CopyColorFiles; CopyDocFiles" BeforeTargets="BeforeBuild" AfterTargets="AfterBuild" />
  <Target Name="Clean" DependsOnTargets="CleanConfigFiles; CleanSyntaxFiles; CleanColorFiles; CleanDocFiles" BeforeTargets="BeforeClean" AfterTargets="AfterClean" />
  <Target Name="Rebuild" DependsOnTargets="BeforeRebuild; Clean; Build" AfterTargets="AfterRebuild" />
  <!-- Config File Targets -->
  <Target Name="CopyConfigFiles" Inputs="@(ConfigFile)" Outputs="@(ConfigFile->'$(ConfOutDir)\%(Filename)%(Extension)')">
    <MakeDir Directories="$(ConfOutDir)" Condition="!Exists('$(ConfOutDir)')" />
    <Copy SourceFiles="@(ConfigFile)" DestinationFolder="$(ConfOutDir)" />
    <!-- Output minified files -->
    <MakeDir Directories="$(IntDir)" Condition="!Exists('$(IntDir)')" />
    <Exec Condition="'$(_Python)'!='' and Exists('$(_Python)')" Command="FOR %%f IN (@(ConfigFile)) DO (echo Minifying %%~nf%%~xf &amp; $(_Python) squeezerc.py &quot;%%f&quot; &quot;$(IntDir)\%%~nf%%~xf&quot;)" />
  </Target>
  <Target Name="CleanConfigFiles">
    <RemoveDir Directories="$(ConfOutDir)" />
    <RemoveDir Directories="$(IntDir)" />
  </Target>
  <!-- Syntax File Targets -->
  <Target Name="CopySyntaxFiles" Inputs="@(SyntaxFile)" Outputs="@(SyntaxFile->'$(SyntaxOutDir)\%(Filename)%(Extension)')">
    <MakeDir Directories="$(SyntaxOutDir)" Condition="!Exists('$(SyntaxOutDir)')" />
    <Copy SourceFiles="@(SyntaxFile)" DestinationFolder="$(SyntaxOutDir)" />
    <!-- Output minified files -->
    <MakeDir Directories="$(IntDir)" Condition="!Exists('$(IntDir)')" />
    <Exec Condition="'$(_Python)'!='' and Exists('$(_Python)')" Command="FOR %%f IN (@(SyntaxFile)) DO (echo Minifying %%~nf%%~xf &amp; $(_Python) squeezejsf.py &quot;%%f&quot; &quot;$(IntDir)\%%~nf%%~xf&quot;)" />
  </Target>
  <Target Name="CleanSyntaxFiles">
    <RemoveDir Directories="$(SyntaxOutDir)" />
    <RemoveDir Directories="$(IntDir)" />
  </Target>
  <!-- Color File Targets -->
  <Target Name="CopyColorGenFiles" Inputs="@(ColorGenFile);@(ColorGenerator);@(ColorOverrideFile)" Outputs="@(ColorGenFile->'$(SchemesOutDir)\%(Filename).joecolor')">
    <Warning Condition="'$(_Python)'=='' or !Exists('$(_Python)')" Text="Unable to find Python 2.x.  Skipping color scheme generation." />
    <MakeDir Directories="$(SchemesOutDir)" Condition="!Exists('$(SchemesOutDir)')" />
    <Exec Condition="'$(_Python)'!='' and Exists('$(_Python)')" WorkingDirectory="$(SchemeGenDir)" Command="FOR %%f IN (@(ColorGenFile->'%(RootDir)%(Directory)%(Filename)')) DO (echo Generating %%~nf.joecolor &amp; IF EXIST %%f.override ($(_Python) convertvimcolor.py &quot;%%f.vim&quot; &quot;$(SchemesOutDir)\%%~nf.joecolor&quot; &quot;%%f.override&quot;) ELSE ($(_Python) convertvimcolor.py &quot;%%f.vim&quot; &quot;$(SchemesOutDir)\%%~nf.joecolor&quot;))" />
    <!-- Output minified files -->
    <MakeDir Directories="$(IntDir)" Condition="!Exists('$(IntDir)')" />
    <Exec Condition="'$(_Python)'!='' and Exists('$(_Python)')" Command="FOR %%f IN (@(ColorGenFile->'$(SchemesOutDir)\%(Filename).joecolor')) DO (echo Minifying %%~nf%%~xf &amp; $(_Python) squeezecolors.py &quot;%%f&quot; &quot;$(IntDir)\%%~nf%%~xf&quot;)" />
  </Target>
  <Target Name="CopyColorFiles" Inputs="@(ColorFile)" Outputs="@(ColorFile->'$(SchemesOutDir)\%(Filename)%(Extension)')">
    <Copy SourceFiles="@(ColorFile)" DestinationFolder="$(SchemesOutDir)" />
    <!-- Output minified files -->
    <MakeDir Directories="$(IntDir)" Condition="!Exists('$(IntDir)')" />
    <Exec Condition="'$(_Python)'!='' and Exists('$(_Python)')" Command="FOR %%f IN (@(ColorFile)) DO (echo Minifying %%~nf%%~xf &amp; $(_Python) squeezecolors.py &quot;%%f&quot; &quot;$(IntDir)\%%~nf%%~xf&quot;)" />
  </Target>
  <Target Name="CleanColorFiles">
    <RemoveDir Directories="$(SchemesOutDir)" />
    <RemoveDir Directories="$(IntDir)" />
  </Target>
  <Target Name="CopyDocFiles" Inputs="@(DocFile)" Outputs="@(DocFile->'$(OutDir)\doc\%(Filename)%(Extension)')">
    <MakeDir Directories="$(OutDir)\doc" />
    <Copy SourceFiles="@(DocFile)" DestinationFolder="$(OutDir)\doc" />
    <Copy SourceFiles="@(DocFile)" DestinationFolder="$(IntDir)" />
  </Target>
  <Target Name="CleanDocFiles">
    <RemoveDir Directories="$(OutDir)\doc" />
  </Target>
</Project>
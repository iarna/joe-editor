# JOE syntax highlight file for JAVA

# Needs: improve escape parsing

=Idle
=Comment 	green
=Constant 	cyan
=Escape 	bold cyan
=Type 		bold
=Keyword 	bold
=Operator	bold
=Bad		bold red
=Brace		magenta
=Control	

=Methods

:begin Idle
	*	begin	noeat call=.java()

#
# Java as a subroute- for use as java script in html
#

.subr java

:idle Idle
	*		idle
	"\n"		idle
	"/"		slash
	"0"		first_digit	recolor=-1
	"1-9"		decimal		recolor=-1
	"."		maybe_float
	"\""		string		recolor=-1
	"'"		char		recolor=-1
	"\i\p{Sc}"	ident		mark buffer
	"{}"		brace		recolor=-1
	",:;=()><[]*&|!~+\-%^"	control	recolor=-1

:maybe_done Control
	*		idle		noeat
	"/"		idle		noeat return recolor=-2

:brace Brace
	*		idle		noeat

:control Control
	*		idle		noeat

:slash Idle
	*		idle		noeat
	"*"		comment		recolor=-2
	"/"		line_comment	recolor=-2

:comment Comment
	*		comment
	# might be TODO label
	"BFHNTX"	comment		noeat call=comment_todo.comment_todo()
	"*"		maybe_end_comment

:maybe_end_comment Comment
	*		comment		noeat
	"/"		idle
	"*"		maybe_end_comment

:line_comment Comment
	*		line_comment
	# might be TODO label
	"BFHNTX"	line_comment	noeat call=comment_todo.comment_todo()
	"\n"		idle

:first_digit Constant
	*		idle		noeat
	"xX"		hex
	"."		float
	"eE"		epart
	"0-7"		octal
	"89"		bad_number	recolor=-1

:bad_number Bad
	*		idle		noeat
	"0-9"		bad_number

:octal Constant
	*		idle		noeat
	"0-7"		octal
	"89"		bad_number	recolor=-1

:hex Constant
	*		idle		noeat
	"0-9A-Fa-f"	hex

:decimal Constant
	*		idle		noeat
	"0-9"		decimal
	"eE"		epart
	"."		float

:maybe_float Constant
	*		idle		recolor=-2 noeat
	"0-9"		float		recolor=-2

:float Constant
	*		idle		noeat
	"eE"		epart
	"0-9"		float

:epart Constant
	*		idle		noeat
	"0-9+\-"	enum

:enum Constant
	*		idle		noeat
	"0-9"		enum

:string	Constant
	*		string
	"\""		idle
	"\\"		string_escape	recolor=-1
	"%"		string_control	recolor=-1

:string_escape Escape
	*		string
	"u"		string_uni1
	"0-7"		string_octal2
	"\n"		string		recolor=-2

:string_uni1 Escape
	*		string		noeat
	"0-9a-fA-F"	string_uni2

:string_uni2 Escape
	*		string		noeat
	"0-9a-fA-F"	string_uni3

:string_uni3 Escape
	*		string		noeat
	"0-9a-fA-F"	string_uni4

:string_uni4 Escape
	*		string		noeat
	"0-9a-fA-F"	string

:string_octal2 Escape
	*		string		noeat
	"0-7"		string_octal3

:string_octal3 Escape
	*		string		noeat
	"0-7"		string

:string_control Escape
	*		string_control
	"\n"		reset
	"diouxXeEfFgGaAcspn%SC"	string

:char Constant
	*		char
	"\n"		reset
	"'"		idle
	"\\"		char_escape	recolor=-1

:char_escape	Escape
	*		char
	"u"		char_uni1
	"0-7"		char_octal2
	"\n"		char		recolor=-2

:char_uni1 Escape
	*		char		noeat
	"0-9a-fA-F"	char_uni2

:char_uni2 Escape
	*		char		noeat
	"0-9a-fA-F"	char_uni3

:char_uni3 Escape
	*		char		noeat
	"0-9a-fA-F"	char_uni4

:char_uni4 Escape
	*		char		noeat
	"0-9a-fA-F"	char

:char_octal2 Escape
	*		char		noeat
	"0-7"		char_octal3

:char_octal3 Escape
	*		char		noeat
	"0-7"		char

:ident Idle
	*		ident_end	noeat markend strings
	"abstract"	kw
	"assert"	kw
	"boolean"	type
	"break"		kw
	"byte"		type
	"case"		kw
	"catch"		kw
	"char"		type
	"class"		kw
	"const"		bad_kw
	"continue"	kw
	"default"	kw
	"do"		kw
	"double"	type
	"else"		kw
	"enum"		kw
	"extends"	kw
	"false"		lit
	"final"		kw
	"finally"	kw
	"float"		type
	"for"		kw
	"goto"		bad_kw
	"if"		kw
	"implements"	kw
	"import"	kw
	"instanceof"	operator
	"int"		type
	"interface"	kw
	"long"		type
	"native"	kw
	"new"		operator
	"null"		lit
	"package"	kw
	"private"	kw
	"protected"	kw
	"public"	kw
	"return"	kw
	"short"		type
	"static"	kw
	"strictfp"	kw
	"super"		kw
	"switch"	kw
	"synchronized"	kw
	"this"		kw
	"throw"		kw
	"throws"	kw
	"transient"	kw
	"true"		lit
	"try"		kw
	"void"		kw
	"volatile"	kw
	"while"		kw
done
	"\c\p{Sc}"	ident

:type Type
	*		idle		noeat

:kw Keyword
	*		idle		noeat

:bad_kw Bad
	*		idle		noeat

:lit Constant
	*		idle		noeat

:operator Operator
	*		idle		noeat

:ident_end Idle
	*		idle		noeat
	" "		ident_end
	"("		method_end	noeat recolormark

:method_end Methods
	*		idle		noeat

.end
